<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                     http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                     http://www.springframework.org/schema/context
                     http://www.springframework.org/schema/context/spring-context-3.2.xsd
                     http://www.springframework.org/schema/aop
                     http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
                     http://www.springframework.org/schema/tx
                     http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
                     http://www.springframework.org/schema/cache
                     http://www.springframework.org/schema/cache/spring-cache-3.2.xsd">

    <!-- 自动扫描
        location="属性文件，多个之间逗号分隔"
        file-encoding="文件编码"
        ignore-resource-not-found="是否忽略找不到的属性文件"
        ignore-unresolvable="是否忽略解析不到的属性，如果不忽略，找不到将抛出异常"
        properties-ref="本地Properties配置"
        local-override="是否本地覆盖模式，即如果true，那么properties-ref的属性将覆盖location加载的属性，否则相反"
        system-properties-mode="系统属性模式，默认ENVIRONMENT（表示先找ENVIRONMENT，再找properties-ref/location的），NEVER：表示永远不用ENVIRONMENT的，OVERRIDE类似于ENVIRONMENT"
        order="顺序"  -->
    <context:property-placeholder ignore-resource-not-found="true" location="classpath*:/config.properties"/>
    <context:component-scan base-package="com.*.biz.*">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <bean id="frontMasterDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
          <property name="driverClassName" value="${mysql.front.driver}" />
          <property name="url" value="${mysql.front.url}" />
          <property name="username" value="${mysql.front.username}" />
          <property name="password" value="${mysql.front.password}" />
    </bean>
    <bean id="backMasterDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${mysql.back.driver}" />
        <property name="url" value="${mysql.back.url}" />
        <property name="username" value="${mysql.back.username}" />
        <property name="password" value="${mysql.back.password}" />
    </bean>
    <!-- Spring的applicationContext配置文件中定义一个SqlSessionFactoryBean -->
    <bean id="frontSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="frontMasterDataSource" />
        <property name="configLocation" value="classpath:mybatis.xml" />
    </bean>
    <bean id="backSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="backMasterDataSource" />
        <property name="configLocation" value="classpath:mybatis.xml" />
    </bean>
    <!-- 使用MapperScannerConfigurer来帮我们自动扫描和注册Mapper接口 -->
    <bean id="frontMapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="frontSqlSessionFactory" />
        <property name="basePackage" value="com.front.dao.*" />
    </bean>
    <bean id="backMapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="backSqlSessionFactory" />
        <property name="basePackage" value="com.back.dao.*" />
    </bean>
    <bean name="frontTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="frontMasterDataSource"></property>
    </bean>
    <bean name="backTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="backMasterDataSource"></property>
    </bean>

    <!-- 基于xml 配置事务 -->
    <!--<tx:advice id="userTxAdvice" transaction-manager="frontTransactionManager">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="delete*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" no-rollback-for="java.lang.RuntimeException"/>-->
            <!--<tx:method name="insert*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.RuntimeException" />-->
            <!--<tx:method name="update*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />-->
            <!--<tx:method name="find*" propagation="SUPPORTS"/>-->
            <!--<tx:method name="get*" propagation="SUPPORTS"/>-->
            <!--<tx:method name="select*" propagation="SUPPORTS"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->
    <!--<aop:config>-->
        <!--<aop:pointcut id="pc" expression="execution(public * com.*.biz.impl.*.*(..))"/>-->
        <!--<aop:advisor advice-ref="userTxAdvice" pointcut-ref="pc"/>-->
    <!--</aop:config>-->

    <!--<context:annotation-config />-->
    <!-- 启动spring事务注解，事务注解尽在此 -->
    <tx:annotation-driven transaction-manager="backTransactionManager"/>
    <tx:annotation-driven transaction-manager="frontTransactionManager"/>
</beans>